---
import PagePreviewLayout from '@/layouts/Sections/PagePreview/index.astro';
import WorkCard from '@/components/Cards/Work/index.astro';
import { sanityClient } from '@/data/sanity';
import type { DataWork } from '@/types/index';
import { urlForImage } from '@/utils/index';

let works: DataWork[] | undefined;
try {
	works = await sanityClient.fetch(`*[_type == "work"][0..3] | order(builtAt desc)`);
} catch {
	works = undefined;
}
---
<PagePreviewLayout title='work' pageUrl='/work' quantity={works?.length ?? 0}>
	{works?.slice(0, 3).map((work: DataWork) => (
		<WorkCard
			builtAt={work.builtAt}
			isVisibleOnMount={false}
			logo={urlForImage(work.logo).url()}
			name={work.name}
			slug={work.slug}
		/>
	))}
</PagePreviewLayout>

<script>
	import { ANIMATION_TYPE, animateElements } from '@/utils/index';

	const target = document.getElementById('preview-section-work');
	const intersectionOptions = {
		root: null,
    rootMargin: '0px',
    threshold: .5,
	};

	const handleIntersection = (entries: IntersectionObserverEntry[]) => (
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				const cards = document.querySelectorAll('.animated-card-work');
				animateElements({ targets: cards, animationType: ANIMATION_TYPE.SLIDE_IN, delay: 200 });
			};
		})
	);

	const sectionObserver = new IntersectionObserver(handleIntersection, intersectionOptions);
	target && sectionObserver.observe(target);
</script>