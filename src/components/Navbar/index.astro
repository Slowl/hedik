---
import { sanityClient } from '@/data/sanity';
import type { DataNavbar } from '@/types/index';
import Logo from '../../../public/logo_hedik_x500.svg?raw';

const dataNavbar: DataNavbar = await sanityClient.fetch(`*[_id == "navbar"][0]`);
---

<nav id='navbar'>
	<div class='left-container'>
		<a href='/' title='home'>
			<Fragment set:html={Logo} />
		</a>
	</div>
	<div class='right-container'>
		{dataNavbar.links.map((link) => (
			<a
				class='nav-link'
				href={link.page}
				id={link.name}
				target={link.newTab ? '_blank' : '_self'}
				title={link.name}
			>
				{link.name}
			</a>
		))}
	</div>
</nav>

<style>
	nav {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 0 var(--size-xxl);
		margin-bottom: 8rem;
		border-bottom: 1px solid var(--black);
		border-bottom-style: dotted;
		position: sticky;
		top: 0;
		background-color: var(--white-base);
		transition: var(--transition-slow);
		z-index: 999;

		@media screen and (max-width: 650px) {
			padding: 0 var(--size-s);
			margin-bottom: 2rem;

			.right-container {
				gap: var(--size-lg);
			}

			.nav-link:after {
				width: 5px; height: 5px;
			}
		};
		@media screen and (min-width: 651px) and (max-width: 1024px) {
			margin-bottom: 4rem;
		}
	}

	.nav-hidden {
		transform: translateY(-100%);
	}
	.left-container {
		& a { display: block; width: 28px; }
	}
	.right-container {
		display: flex;
		gap: var(--size-xxl);
	}
	.nav-link {
		color: var(--black);
		text-decoration: none;
		padding: var(--size-xl) 0 var(--size-md);
	}
	.nav-link::after {
		display: block;
		content: '';
		background-color: var(--accent);
		width: 6px; height: 6px;
		margin: auto;
		border-radius: 50%;
		visibility: hidden;
		opacity: 0;
		transform: translateY(10px);
		transition: var(--transition-default);
	}
	.nav-link:is(:hover, :focus-visible)::after {
		visibility: visible;
		opacity: 1;
		transform: translateY(4px);
	}
	.nav-link-current::after {
		visibility: visible;
		opacity: 1;
		transform: translateY(4px);
	}
</style>

<script>
	import { throttle } from '@/utils/index';
	//#region HANDLE SCROLL
	let previousScrollPosition = Math.min(window.scrollY, 0);
	const scrollDirection = () => {
			let scrollPosition = window.scrollY;
			let scrollDirection: 'down' | 'up' | undefined = undefined;

			(scrollPosition <= 0)
				? scrollDirection = 'up'
				: (scrollPosition > previousScrollPosition)
					? scrollDirection = 'down'
					: scrollDirection = 'up';

			previousScrollPosition = scrollPosition;

			return scrollDirection;
	};
	const handleScroll = () => {
		const navContainer = document.getElementById('navbar');

		scrollDirection() === 'down'
			? navContainer?.classList.add('nav-hidden')
			: navContainer?.classList.remove('nav-hidden');
	};
	window.addEventListener('scroll', () => throttle(handleScroll, 400));
	//#endregion

	//#region HANDLE CURRENT PAGE
	const navLinks: NodeListOf<HTMLLinkElement> = document.querySelectorAll('.nav-link');
	const currentBasePage = window.location.pathname.slice(1).split('/')[0];

  navLinks.forEach((link) => {
		const linkPath = link.href.split('/').at(-1);

    if (currentBasePage === linkPath) {
      link.classList.add('nav-link-current');
    }
  });
	//#endregion
	
</script>